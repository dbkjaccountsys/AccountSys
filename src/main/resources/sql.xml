<?xml version="1.0" encoding="UTF-8" ?>
<sql-list>
    <group class="com.dbkj.account.model.Admin">
    	<sql id="findByUsernameAndPassword">
    		select id,username,password,name,phone,email,role_id,create_time,modify_time,available from admin where username=? and password=? and available=1 limit 0,1
    	</sql>
    	<sql id="getIdByUsername">
    		select id from admin where username=? and available=1 limit 0,1
    	</sql>
    	<sql id="isExistsPhone">
    		select count(1) from admin where phone=? and available=1
    	</sql>
    </group>
    <group id="com.dbkj.account.model.User">
    	<sql id="isExistsPhone">
    		select count(1) from user where phone=? and available=1
    	</sql>
    </group>
    <group class="com.dbkj.account.model.AdminAuth">
    	<sql id="getRoleAuthByRoleId">
    		select t3.id,t3.auth_name,t3.icon,t1.action_url,t3.`order`,t3.parent_id from action t1 inner join admin_action t2 
    		on t1.id=t2.action_id right join admin_auth t3 on t2.auth_id=t3.id inner join admin_role_auth t4 on t3.id=t4.auth_id 
    		inner join admin_role t5 on t4.role_id=t5.id where t4.role_id=? and t3.menu=1 and t5.available=1
    	</sql>
    </group>
    <group class="com.dbkj.account.model.UserAuth">
    	<sql id="getAuthList">
    		select id,auth_name,desc,action_url,icon,parent_id,menu,order from user_auth where id in 
    	</sql>
    </group>
    <group class="com.dbkj.account.model.UserLog">
    	<sql id="createTable">
    		create table if not exists user_log (like user_log)
    	</sql>
    	<sql id="add">
    		insert into user_log(usertype,userid,time,ip,content,opera_type,opera_result,exception_msg) values(?,?,?,?,?,?,?,?)
    	</sql>
    	<sql id="getLoginFailTimes">
    		select count(1) as times from user_log where opera_type=? and time between ? and ? and opera_result=? limit 0,?
    	</sql>
    </group>
    <group class="com.dbkj.account.model.OperaType">
    	<sql id="getOperaList">
    		select t1.id,t3.action_url from opera_type t1 inner join opera_action t2 on t1.id=t2.opera_type inner join action t3 on t3.id=t2.action_id 
    	</sql>
    </group>
    <group class="com.dbkj.account.model.Action">
    	<sql id="getActionsUrlByAdminRoleId">
    		select t5.action_url from admin_role t1 inner join admin_role_auth t2 on t1.id=t2.role_id inner join admin_auth t3 on t3.id=t2.auth_id inner
    		 join admin_action t4 on t3.id=t4.auth_id inner join action t5 on t4.action_id=t5.id where t1.id=? and t1.available=1
			union all
			select t5.action_url from admin_role t1 inner join admin_role_auth t2 on t1.id=t2.role_id inner join admin_auth t3 on t3.id=t2.auth_id inner
    		 join admin_action t4 on t3.id=t4.auth_id inner join action t5 on t4.action_id=t5.parent_id where t1.id=? and t1.available=1
    	</sql>
    	<sql id="getActionsUrlByUserRoleId">
    		select t5.action_url from user_role t1 inner join user_role_auth t2 on t1.id=t2.role_id inner join user_auth t3 on t3.id=t2.auth_id inner 
    		join user_action t4 on t3.id=t4.auth_id inner join action t5 on t4.action_id=t5.id where t1.id=? and t1.available=1
    	</sql>
    </group>
    <group class="com.dbkj.account.model.UserInfo">
    	<sql id="getList">
    		select t1.id,t2.username,t1.companyname,t1.contact,t1.contactphone,t1.modify_time from user_info t1 inner join `user` t2 on t1.userid=t2.id 
			where t1.id >= (select user_info.id from user_info inner join `user` on user_info.userid=`user`.id where ispass=0 and user_info.available=1 
			order by user_info.modify_time desc limit ?,1) order by t1.modify_time desc limit ?;
    	</sql>
    	<sql id="getCount">
    		select count(1) as `count` from user_info inner join `user` on user_info.userid=`user`.id where user_info.available=1
    	</sql>
    </group>
</sql-list>